<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tooling on trootski</title><link>https://trootski.github.io/tags/tooling/</link><description>Recent content in Tooling on trootski</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 09 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://trootski.github.io/tags/tooling/index.xml" rel="self" type="application/rss+xml"/><item><title>Lovin Miniflux</title><link>https://trootski.github.io/post/2025/09/lovin-miniflux/</link><pubDate>Tue, 09 Sep 2025 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2025/09/lovin-miniflux/</guid><description>&lt;p>I&amp;rsquo;ve made some references in the past to my attempts over the years to replace &lt;a href="https://en.wikipedia.org/wiki/Google_Reader">Google Reader&lt;/a>. Released in 2005 the functionality it offered was convenient. I have tried multiple times applications to replace this, but none offered the same level of simplicity. I love RSS as a concept because it empowers open decentralised distribution. The consumer gets to control the feeds they consume. You choose your feeds. As long as you&amp;rsquo;re just sorting by date there is no ‘algorithm&amp;rsquo; nudging you in one direction or another.&lt;/p></description></item><item><title>A year of the Linux desktop</title><link>https://trootski.github.io/post/2024/11/longest-linux-run-yet/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2024/11/longest-linux-run-yet/</guid><description>&lt;p>I have previously had multiple forays into Linux as my main desktop. This has generally ended with a return to macOS at some point for one reason or another. This pattern has recently repeated itself. However, I think it’s worth recording that this time the switch back was not due to any irreconcilable issue.&lt;/p></description></item><item><title>My favourite bash shortcuts</title><link>https://trootski.github.io/post/2018/10/my-favourite-bash-shortcuts/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2018/10/my-favourite-bash-shortcuts/</guid><description>I recently transitioned from using vi mode in bash to the default command line shortcuts. I had ignored them for a long time but after a brief period sitting and learning a few I no longer missed vi mode. Some of the key reasons that prompted me to change are:
vi mode does not have a visual prompt, leading to unecassary escape smashing I only used the most basic motion command, eschewing a lot of the power of the vi commands When ssh&amp;rsquo;ing into other boxes the switch in interface is jarring.</description></item><item><title>Delete last word</title><link>https://trootski.github.io/post/2018/02/delete-last-word/</link><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2018/02/delete-last-word/</guid><description>Coming from vim I´m used to a wide variety of keystrokes to manipulate text. The other day at work though my mind was blown when a colleague hit alt + backspace to delete the previous word in macOS. This was particularly useful because in Terminal I am used to pressing ctrl+w. This will delete the previous word as well, but it terminal it does not respect delimeters such as ´_/´_ or ´_-´_.</description></item><item><title>Back to Windows</title><link>https://trootski.github.io/post/2016/02/back-to-windows/</link><pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2016/02/back-to-windows/</guid><description>I recently put Windows 10 onto my little Acer. It was a practical decision. I enjoyed Ubuntu but had a real problem with the impact on battery performance. After 40 to 50 minutes the battery would generally be depleted.
So, I downloaded a Windows 8 ISO from Microsoft and began the installation. It took a loooooong time (it&amp;rsquo;s not a very performant laptop). Eventually I got Windows 8 installed, upgraded to Windows 10, sorted out activation issue with Acer and Microsoft.</description></item><item><title>Quick Tip: Photoshop save slices without creating images folder</title><link>https://trootski.github.io/post/2015/08/quick-tip-photoshop-save-slices-without-creating-images-folder/</link><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2015/08/quick-tip-photoshop-save-slices-without-creating-images-folder/</guid><description>One of the minor annoyances that I run into from time to time is saving slices from a PSD.
Once I have my slices defined and selected a folder Photoshop will save all my images in the folder I specified. However it will also create an images folder and place the images this folder. This means I that after saving the files they must be moved out of this folder.</description></item><item><title>ssh as part of my workflow</title><link>https://trootski.github.io/post/2014/12/ssh-as-part-of-my-workflow/</link><pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2014/12/ssh-as-part-of-my-workflow/</guid><description>Have you ever been in the situation where the discovery of a technology or technique has rendered previous workflow comically inept and wasteful. One such example would be the discovery of the &amp;ldquo;edit multiple frames&amp;rdquo; button in Adobe Flash Professional. I had spent so much time moving from frame to frame to edit a tween. Then to discover that I could choose the entire animation as one and edit. Joy and sorrow in the one same wave of realisation.</description></item><item><title>Vagrant and Puppet setup</title><link>https://trootski.github.io/post/2014/10/vagrant-and-puppet-setup/</link><pubDate>Wed, 15 Oct 2014 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2014/10/vagrant-and-puppet-setup/</guid><description>This summer during my holidays in Romania I looked into Vagrant. I had some time during the due to the heat, undertaking my own siesta without the sleep.
My path to to Vagrant was slightly oblique, as I had been looking to test out Puppet. I had been using VirtualBox virtual machines as an integral part of my development and testing process for some time. The promise of making this an automated and scripted process for my development environment appealed to me.</description></item><item><title>New Rig</title><link>https://trootski.github.io/post/2014/01/new-rig/</link><pubDate>Wed, 15 Jan 2014 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2014/01/new-rig/</guid><description>As a sort of follow up to the article here I decided to continue to attempt to scratch my Linux itch.
Reasoning that maybe virtual machines aren&amp;rsquo;t a fair reflection of a system&amp;rsquo;s capabilities I went and bought a little netbook. I went for a little Acer Aspire in the January sales. This is a relatively cheap model, but it was the Christmas break so I had a little bit of time to kill.</description></item><item><title>Grunt setup</title><link>https://trootski.github.io/post/2013/11/grunt-setup/</link><pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2013/11/grunt-setup/</guid><description>This article might be helpful to anybody who satisfies the following criteria:
Wants to run Grunt On a Mac Running Linux through VirtualBox Using a shared folder for the directory you want to install packages If this describes your situation, you probably have run into errors installing the local version of Grunt through npm
The reason for these errors might be that your Shared Folder doesn&amp;rsquo;t actually support symlinks.
This was a change in v1.</description></item><item><title>Pure-ftpd virtual users</title><link>https://trootski.github.io/post/2013/10/pure-ftpd-virtual-users/</link><pubDate>Thu, 31 Oct 2013 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2013/10/pure-ftpd-virtual-users/</guid><description>Long ago I attempted to setup my first FTP daemon on linux. One point that constantly caused me issues was how to setup users.
The basic setup I wanted was for an FTP user to be able to login, upload some files and the web server to serve them. When I was first looking at this I was thinking in terms of real users. This issue with this was that the real user would have real file permissions.</description></item><item><title>i3 wm</title><link>https://trootski.github.io/post/2013/10/i3-wm/</link><pubDate>Tue, 29 Oct 2013 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2013/10/i3-wm/</guid><description>Had a nice play recently with the i3 wm for Linux.
It&amp;rsquo;s a really nice paradigm for working with when programming. It uses the same style of keyboard navigation as vim for moving around your windows.
The windows key can be bound as your modifier key and then used to navigate to a particular workspace (e.g. Windows + 2 to go to the browser workspace). Particular applications can be configured to open only on certain workspaces.</description></item><item><title>One weekend with Ubuntu</title><link>https://trootski.github.io/post/2013/03/one-weekend-with-ubuntu/</link><pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2013/03/one-weekend-with-ubuntu/</guid><description>I have an itch. This itch has been bothering me for probably ten years now.
I am drawn to idea of doing most of my work on Linux. Every year or so I attempt to scratch this itch to see if it&amp;rsquo;s finally possible.
Why do I want to move to Linux? Lately I&amp;rsquo;ve become conscious about where Microsoft and Apple seem to be taking the desktop experience. Closed Wall == Max Profit.</description></item><item><title>Process Explorer</title><link>https://trootski.github.io/post/2009/05/process-explorer/</link><pubDate>Tue, 12 May 2009 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2009/05/process-explorer/</guid><description>If you&amp;rsquo;re looking for a bit more information than Task Manger manager provides, Process Explorer, also from Microsoft may be the answer. With it you can view your processess in a hierarchical tree, find out what processess are safe and find out which process is running a particular window.
These are just a few of the capabilities, and you can configure it to run instead of Task Manager at the click of a button.</description></item><item><title>Interesting little browser feature</title><link>https://trootski.github.io/post/2008/10/interesting-little-browser-feature/</link><pubDate>Mon, 13 Oct 2008 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2008/10/interesting-little-browser-feature/</guid><description>Ever wanted to edit any page in place. Well you always could apparently. Simply enter the following in IE or Firefox and you can edit content in place. Handy for mocking up web pages.
javascript:document.body.contentEditable='true'; document.designMode='on'; void 0</description></item><item><title>Flash Player bug database</title><link>https://trootski.github.io/post/2008/04/flash-player-bug-database/</link><pubDate>Mon, 21 Apr 2008 00:00:00 +0000</pubDate><guid>https://trootski.github.io/post/2008/04/flash-player-bug-database/</guid><description>Adobe has made the bug database for the flash player public. Its well worth a look if you&amp;rsquo;ve got something that should be working but isn&amp;rsquo;t.
https://bugs.adobe.com/jira/browse/FP</description></item></channel></rss>